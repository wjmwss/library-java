## filename=${context.classNamePascal}Controller.java, folder=
#set($controllerClass="${context.classNamePascal}Controller")
#set($serviceClass="${context.classNamePascal}Service")
#set($serviceObj="${context.classNameCamel}Service")
#set($entityClass="${context.classNamePascal}")
#set($entityObj="${context.classNameCamel}")
package ${context.packageName}.mapper;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import ${context.packageName}.entity.${entityClass};
import ${context.packageName}.service.${serviceClass};

@RestController
public class ${controllerClass} {

    @Autowired
    private ${serviceClass} ${serviceObj};

    /**
     * 查询所有记录
     *
     * @return 返回集合，没有返回空List
     */
    @RequestMapping("list")
    public List<${entityClass}> listAll() {
        return ${serviceObj}.listAll();
    }


    /**
     * 根据主键查询
     *
     * @param id 主键
     * @return 返回记录，没有返回null
     */
    @RequestMapping("getById")
    public ${entityClass} getById(${pk.javaTypeBox} ${pk.javaFieldName}) {
        return ${serviceObj}.getById(${pk.javaFieldName});
    }    
     
    /**
     * 新增，忽略null字段
     *
     * @param ${entityObj} 新增的记录
     * @return 返回影响行数
     */
    @RequestMapping("insert")
    public int insert(@RequestBody ${entityClass} ${entityObj}) {
        return ${serviceObj}.insertIgnoreNull(${entityObj});
    }    
      
    /**
     * 修改，忽略null字段
     *
     * @param ${entityObj} 修改的记录
     * @return 返回影响行数
     */
    @RequestMapping("update")
    public int update(@RequestBody ${entityClass} ${entityObj}) {
        return ${serviceObj}.updateIgnoreNull(${entityObj});
    }
    
    /**
     * 删除记录
     *
     * @param ${entityObj} 待删除的记录
     * @return 返回影响行数
     */
    @RequestMapping("delete")
    public int delete(@RequestBody ${entityClass} ${entityObj}) {
        return ${serviceObj}.delete(${entityObj});
    }
    
}