plugins {
    id 'maven-publish'
}

def projectName = 'itcp-sugar-convert-all'

version = '1.2'

dependencies {
    implementation(project(':itcp-sugar-tools'))
    implementation("$spring_boot_starter_web")

    api(project(':itcp-sugar-convert:itcp-sugar-convert-spring'))
    api(project(':itcp-sugar-convert:itcp-sugar-convert-jackson'))
    api(project(':itcp-sugar-convert:itcp-sugar-convert-fastjson'))
    api(project(':itcp-sugar-convert:itcp-sugar-convert-mapstruct'))

    annotationProcessor("$mapstruct_processor")
    annotationProcessor("$lombok_mapstruct_binding")

    testImplementation(project(':itcp-sugar-tools'))
    testImplementation(project(':itcp-sugar-convert:itcp-sugar-convert-jackson'))
    testImplementation(project(':itcp-sugar-convert:itcp-sugar-convert-mapstruct'))
    testImplementation("$spring_boot_starter_web")

    testAnnotationProcessor("$mapstruct_processor")
    testAnnotationProcessor("$lombok_mapstruct_binding")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = projectCharset
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding projectCharset
        version true
        title projectName
    }
}

publishing {
    publications {
        publishApp(MavenPublication) {
            groupId group
            artifactId jar.baseName
            version project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            credentials {
                username publishUsername
                password publishPassword
            }
            url repositoryUrl
            allowInsecureProtocol = true
        }
    }
}